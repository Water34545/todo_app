{"version":3,"sources":["components/AppHeader/index.js","components/SearchPanel/index.js","components/TodoListItem/index.js","components/TodoList/index.js","components/ItemStatusFilter/index.js","components/ItemAddForm/index.js","components/App/index.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","text","onChange","e","setState","target","value","props","onSearchPanelChange","this","placeholder","Component","TodoListItem","label","important","onDelited","onToggleImportant","onToggleDone","classNames","onClick","type","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","term","deliteItem","idx","findIndex","el","slice","addItem","newItem","toddleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","doneCount","todoCount","filtretedData","search","ReactDOM","render","document","getElementById"],"mappings":"6WAYeA,G,MATG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACtB,OACI,yBAAKC,UAAU,qBACX,yCACA,4BAAKF,EAAL,gBAAwBC,EAAxB,YCJSE,G,iNACjBC,MAAQ,CACJC,KAAM,I,EAGVC,SAAW,SAACC,GACR,EAAKC,SAAS,CACVH,KAAME,EAAEE,OAAOC,QAEnB,EAAKC,MAAMC,oBAAoBL,EAAEE,OAAOC,Q,wEAKxC,OACI,2BAAOR,UAAU,qCACbQ,MAAOG,KAAKT,MAAMC,KAClBC,SAAUO,KAAKP,SACfQ,YALW,4B,GAbcC,c,QC2B1BC,G,MA3BM,SAACL,GAAW,IACtBM,EAAsEN,EAAtEM,MAAOhB,EAA+DU,EAA/DV,KAAMiB,EAAyDP,EAAzDO,UAAWC,EAA8CR,EAA9CQ,UAAWC,EAAmCT,EAAnCS,kBAAmBC,EAAgBV,EAAhBU,aACzDC,EAAa,iBAQjB,OAPIrB,IACAqB,GAAc,SAEdJ,IACAI,GAAc,cAId,0BAAMpB,UAAWoB,GACb,0BACIpB,UAAU,uBACVqB,QAASF,GACRJ,GAEL,4BAAQO,KAAK,SAASD,QAASH,EAAmBlB,UAAU,8CACxD,uBAAGA,UAAU,uBAEjB,4BAAQsB,KAAK,SAASD,QAASJ,EAAWjB,UAAU,6CAChD,uBAAGA,UAAU,sBCCduB,G,MArBE,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,MAAMP,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,aAE7CM,EAAWD,EAAME,KAAI,SAACC,GAAU,IAC3BC,EAAoBD,EAApBC,GAAOC,EADmB,YACNF,EADM,QAEjC,OACI,wBAAIG,IAAKF,EAAI5B,UAAU,mBACnB,kBAAC,EAAD,iBACI6B,EADJ,CAEAZ,UAAW,kBAAMA,EAAUW,IAC3BV,kBAAmB,kBAAIA,EAAkBU,IACzCT,aAAc,kBAAIA,EAAaS,WAM3C,OACI,wBAAI5B,UAAU,wBAAwByB,KClBzBM,G,iNAEjBC,QAAU,CACN,CAACC,KAAM,MAAOlB,MAAO,OACrB,CAACkB,KAAM,SAAUlB,MAAO,UACxB,CAACkB,KAAM,OAAQlB,MAAO,S,wEAGf,IAAD,EAC2BJ,KAAKF,MAA/ByB,EADD,EACCA,OAAQC,EADT,EACSA,eAETH,EAAUrB,KAAKqB,QAAQN,KAAI,YAAoB,IAAlBO,EAAiB,EAAjBA,KAAMlB,EAAW,EAAXA,MAE/BqB,EADWF,GAAUD,EACF,WAAa,wBACtC,OACI,4BAAQX,KAAK,SACTQ,IAAKG,EACLjC,UAAW,OAASoC,EACpBf,QAAS,kBAAKc,EAAeF,KAC5BlB,MAKb,OACI,yBAAKf,UAAU,aACVgC,O,GA1B6BnB,cCCzBwB,G,iNACjBnC,MAAQ,CACJa,MAAO,I,EAGXuB,cAAgB,SAACjC,GACb,EAAKC,SAAS,CACVS,MAAOV,EAAEE,OAAOC,S,EAIxB+B,SAAW,SAAClC,GACRA,EAAEmC,iBACF,EAAK/B,MAAMgC,YAAY,EAAKvC,MAAMa,OAElC,EAAKT,SAAS,CACVS,MAAO,M,wEAKX,OACI,0BAAMf,UAAU,uBAAuBuC,SAAU5B,KAAK4B,UAClD,2BAAOjB,KAAK,OACRtB,UAAU,eACVQ,MAAOG,KAAKT,MAAMa,MAClBX,SAAUO,KAAK2B,cACf1B,YAAY,2BAEhB,4BAAQZ,UAAU,6BAAlB,gB,GA7ByBa,cCIpB6B,G,iNACjBC,MAAQ,I,EAERzC,MAAQ,CACJ0C,SAAU,CACN,EAAKC,eAAe,gBACpB,EAAKA,eAAe,cACpB,EAAKA,eAAe,qBAExBC,KAAM,GACNZ,OAAQ,O,EAYZa,WAAa,SAACnB,GACV,EAAKtB,UAAS,YAAiB,IAAfsC,EAAc,EAAdA,SACNI,EAAMJ,EAASK,WAAU,SAACC,GAAD,OAAQA,EAAGtB,KAAOA,KAMjD,MAAO,CACHgB,SANU,sBACPA,EAASO,MAAM,EAAGH,IADX,YAEPJ,EAASO,MAAMH,EAAI,U,EASlCI,QAAU,SAACjD,GACP,IAAMkD,EAAU,EAAKR,eAAe1C,GACpC,EAAKG,UAAS,YAAiB,IAAfsC,EAAc,EAAdA,SAKZ,MAAO,CACHA,SALQ,sBACDA,GADC,CAEJS,S,EAqBhBnC,kBAAoB,SAACU,GACjB,EAAKtB,UAAS,YAAiB,IAAfsC,EAAc,EAAdA,SACZ,MAAO,CACHA,SAAU,EAAKU,eAAeV,EAAUhB,EAAI,kB,EAKxDT,aAAe,SAACS,GACZ,EAAKtB,UAAS,YAAiB,IAAfsC,EAAc,EAAdA,SACZ,MAAO,CACHA,SAAU,EAAKU,eAAeV,EAAUhB,EAAI,a,EAKxDlB,oBAAsB,SAACP,GACnB,EAAKG,SAAS,CACVwC,KAAM3C,K,EAIdgC,eAAiB,SAAChC,GACd,EAAKG,SAAS,CACV4B,OAAQ/B,K,8EAzEDY,GACX,MAAO,CACHA,QACAC,WAAW,EACXjB,MAAM,EACN6B,GAAIjB,KAAKgC,W,qCA+BDY,EAAK3B,EAAI4B,GACrB,IAAMR,EAAMO,EAAIN,WAAU,SAACC,GAAD,OAAQA,EAAGtB,KAAOA,KAEtC6B,EAAUF,EAAIP,GACdK,EAAO,eAAOI,EAAP,eAAiBD,GAAYC,EAAQD,KAElD,MAAM,GAAN,mBACOD,EAAIJ,MAAM,EAAGH,IADpB,CAEIK,GAFJ,YAGOE,EAAIJ,MAAMH,EAAI,O,6BAgClBU,EAAOZ,GACV,OAAoB,IAAhBA,EAAKa,OACED,EAGJA,EAAMxB,QAAO,SAACP,GACjB,OAAOA,EAAKZ,MACP6C,cACAC,QAAQf,EAAKc,gBAAkB,O,6BAIrCF,EAAOxB,GACV,OAAOA,GACH,IAAK,MACD,OAAOwB,EACX,IAAK,SACD,OAAOA,EAAMxB,QAAO,SAACP,GAAD,OAAWA,EAAK5B,QACxC,IAAK,OACD,OAAO2D,EAAMxB,QAAO,SAACP,GAAD,OAAUA,EAAK5B,QACvC,QACI,OAAO2D,K,+BAIT,IAAD,EAC4B/C,KAAKT,MAA/B0C,EADF,EACEA,SAAUV,EADZ,EACYA,OAAQY,EADpB,EACoBA,KACnBgB,EAAYlB,EAASV,QAAO,SAACgB,GAAD,OAAOA,EAAGnD,QAAM4D,OAC5CI,EAAYnB,EAASe,OAASG,EAE9BE,EAAgBrD,KAAKuB,OACvBvB,KAAKsD,OAAOrB,EAAUE,GAAOZ,GAEjC,OACI,yBAAKlC,UAAU,YACX,kBAAC,EAAD,CAAWF,KAAMiE,EAAWhE,KAAM+D,IAClC,yBAAK9D,UAAU,oBACX,kBAAC,EAAD,CAAaU,oBAAqBC,KAAKD,sBACvC,kBAAC,EAAD,CAAkBwB,OAAQA,EAAQC,eAAgBxB,KAAKwB,kBAE3D,kBAAC,EAAD,CAAUX,MAAOwC,EACb/C,UAAWN,KAAKoC,WAChB7B,kBAAmBP,KAAKO,kBACxBC,aAAcR,KAAKQ,eAEvB,kBAAC,EAAD,CAAasB,YAAa9B,KAAKyC,e,GAvIdvC,cCJjCqD,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.c2e9250b.chunk.js","sourcesContent":["import React from 'react'\nimport \"./style.css\"\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    )\n}\n\nexport default AppHeader","import React, {Component} from 'react'\nimport './style.css'\n\nexport default class SearchPanel extends Component {\n    state = {\n        text: ''\n    }\n\n    onChange = (e) => {\n        this.setState({\n            text: e.target.value\n        })\n        this.props.onSearchPanelChange(e.target.value)\n    }\n\n    render() {\n        const searchText = 'Type here to search'\n        return (\n            <input className=\"form-control ds-input search-panel\" \n                value={this.state.text}\n                onChange={this.onChange}\n                placeholder={searchText}/>\n        )\n    }\n}","import React, {Component} from 'react'\nimport './style.css'\n\nconst TodoListItem = (props) => {\n    const {label, done, important, onDelited, onToggleImportant, onToggleDone} = props\n    let classNames = 'todo-list-item'\n    if (done) {\n        classNames += ' done'\n    }\n    if (important) {\n        classNames += ' important'\n    }\n        \n    return (\n        <span className={classNames}>\n            <span \n                className=\"todo-list-item-label\"\n                onClick={onToggleDone}>\n                {label}\n            </span>\n            <button type=\"button\" onClick={onToggleImportant} className=\"btn btn-outline-success btn-sm float-right\">\n                <i className=\"fa fa-exclamation\"/>\n            </button>\n            <button type=\"button\" onClick={onDelited} className=\"btn btn-outline-danger btn-sm float-right\">\n                <i className=\"fa fa-trash-o\"/>\n            </button>\n        </span>\n    )\n}\n\nexport default TodoListItem","import React from 'react'\nimport TodoListItem from '../TodoListItem'\nimport './style.css'\n\nconst TodoList = ({todos,onDelited, onToggleImportant, onToggleDone}) => {\n\n    const elements = todos.map((item) => {\n        const {id, ...itemProps} = item\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem \n                {...itemProps} \n                onDelited={() => onDelited(id)}\n                onToggleImportant={()=>onToggleImportant(id)}\n                onToggleDone={()=>onToggleDone(id)}\n                />\n            </li>\n        )\n    })\n\n    return (\n        <ul className=\"list-group todo-list\">{elements}</ul>\n    )\n}\n\nexport default TodoList","import React, {Component} from 'react'\nimport './style.css'\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        {name: 'all', label: 'All'},\n        {name: 'active', label: 'Active'},\n        {name: 'done', label: 'Done'}\n    ]\n\n    render () {\n        const {filter, onFilterChange} = this.props\n\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = filter == name\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\n            return (\n                <button type=\"button\" \n                    key={name}\n                    className={`btn ` + clazz} \n                    onClick={()=> onFilterChange(name)}>\n                    {label}\n                </button>\n            )\n        })\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\n\nimport \"./style.css\"\n\nexport default class ItemAddForm extends Component {\n    state = {\n        label: ''\n    }\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.onItemAdded(this.state.label)\n\n        this.setState({\n            label: ''\n        })\n    }\n\n    render() {\n        return (\n            <form className='item-add-form d-flex' onSubmit={this.onSubmit}>\n                <input type='text' \n                    className='form-control'\n                    value={this.state.label} \n                    onChange={this.onLabelChange}\n                    placeholder='What needs to be done?'\n                />\n                <button className='btn btn-outline-secondary'>\n                    AddItem\n                </button>\n            </form>\n        )\n    }\n}","import React, {Component} from 'react'\nimport AppHeader from '../AppHeader'\nimport SearchPanel from '../SearchPanel'\nimport TodoList from '../TodoList'\nimport ItemStatusFilter from '../ItemStatusFilter';\nimport ItemAddForm from '../ItemAddForm'\nimport \"./style.css\"\n\nexport default class App extends Component {\n    maxId = 100\n\n    state = {\n        todoData: [\n            this.createTodoItem('drink coffee'),\n            this.createTodoItem('earn react'),\n            this.createTodoItem('make awesome app'),\n        ],\n        term: '',\n        filter: 'all'\n    }\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    deliteItem = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id) \n            const newArray = [\n                ...todoData.slice(0, idx), \n                ...todoData.slice(idx+1)\n            ]\n\n            return {\n                todoData: newArray\n            }\n        })\n    }\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text)\n        this.setState(({todoData}) => {\n            const newArr = [\n                    ...todoData,\n                    newItem\n                ]\n            return {\n                todoData: newArr\n            }\n        })\n    }\n\n    toddleProperty (arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id) \n\n        const oldItem = arr[idx]\n        const newItem = {...oldItem, [propName]: !oldItem[propName]}\n\n        return [\n            ...arr.slice(0, idx), \n            newItem,\n            ...arr.slice(idx+1)\n        ]\n    }\n\n    onToggleImportant = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toddleProperty(todoData, id, 'important')\n            }\n        })\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toddleProperty(todoData, id, 'done')\n            }\n        })\n    }\n\n    onSearchPanelChange = (text) => {\n        this.setState({\n            term: text\n        })\n    }\n\n    onFilterChange = (text) => {\n        this.setState({\n            filter: text\n        })\n    }\n\n    search(items, term) {\n        if (term.length === 0) {\n            return items\n        }\n\n        return items.filter((item) => {\n            return item.label\n                .toLowerCase()\n                .indexOf(term.toLowerCase()) > -1\n        })\n    }\n\n    filter(items, filter) {\n        switch(filter) {\n            case 'all':\n                return items\n            case 'active':\n                return items.filter((item) => !item.done)\n            case 'done':\n                return items.filter((item) => item.done)\n            default:\n                return items\n        }\n    }\n\n    render() {\n        const {todoData, filter, term} = this.state\n        const doneCount = todoData.filter((el)=> el.done).length\n        const todoCount = todoData.length - doneCount\n\n        const filtretedData = this.filter(\n            this.search(todoData, term), filter)\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel onSearchPanelChange={this.onSearchPanelChange}/>\n                    <ItemStatusFilter filter={filter} onFilterChange={this.onFilterChange}/>\n                </div>\n                <TodoList todos={filtretedData}\n                    onDelited={this.deliteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone}\n                />\n                <ItemAddForm onItemAdded={this.addItem}/>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}